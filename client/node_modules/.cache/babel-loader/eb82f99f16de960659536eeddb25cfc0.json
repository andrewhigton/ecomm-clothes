{"ast":null,"code":"import _defineProperty from \"/Users/andrewhigton/Documents/react/ecomm-clothes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CartActionTypes } from './cart.types';\nimport { addItemToCart } from './cart.utils';\nconst INITIAL_STATE = {\n  hidden: true,\n  cartItems: []\n};\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, state, {\n        hidden: !state.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: addItemToCart(state.cartItems, action.payload)\n      });\n    //why place the filter item here? same with addItem, its just a util\n    //fine, so what do the selectors do again? \n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      return _objectSpread({}, state, {\n        cartItems: state.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n\n    case CartActionTypes.REMOVE_ITEM:\n      return _objectSpread({}, state, {\n        cartItems: removeItemFromCart(state.cartItems, action.payload)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/redux/cart/cart.reducer.js"],"names":["CartActionTypes","addItemToCart","INITIAL_STATE","hidden","cartItems","cartReducer","state","action","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","CLEAR_ITEM_FROM_CART","filter","cartItem","id","REMOVE_ITEM","removeItemFromCart"],"mappings":";;;;;;AAAA,SAASA,eAAT,QAAgC,cAAhC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,aAAa,GAAG;AACrBC,EAAAA,MAAM,EAAE,IADa;AAErBC,EAAAA,SAAS,EAAE;AAFU,CAAtB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACC,SAAKR,eAAe,CAACS,kBAArB;AACC,+BACIH,KADJ;AAECH,QAAAA,MAAM,EAAE,CAACG,KAAK,CAACH;AAFhB;;AAID,SAAKH,eAAe,CAACU,QAArB;AACC,+BACIJ,KADJ;AAECF,QAAAA,SAAS,EAAEH,aAAa,CAACK,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAFzB;AAID;AACA;;AACA,SAAKX,eAAe,CAACY,oBAArB;AACC,+BACUN,KADV;AAEOF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBS,MAAhB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBR,MAAM,CAACI,OAAP,CAAeI,EADlC;AAFlB;;AAMK,SAAKf,eAAe,CAACgB,WAArB;AACL,+BACIV,KADJ;AAECF,QAAAA,SAAS,EAAEa,kBAAkB,CAACX,KAAK,CAACF,SAAP,EAAkBG,MAAM,CAACI,OAAzB;AAF9B;;AAID;AACC,aAAOL,KAAP;AA1BF;AA4BA,CA7BD;;AA+BA,eAAeD,WAAf","sourcesContent":["import { CartActionTypes } from './cart.types';\nimport { addItemToCart } from './cart.utils';\n\nconst INITIAL_STATE = {\n\thidden: true,\n\tcartItems: []\n}\n\nconst cartReducer = (state = INITIAL_STATE, action) => {\n\tswitch (action.type) {\n\t\tcase CartActionTypes.TOGGLE_CART_HIDDEN:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\thidden: !state.hidden\n\t\t\t}\n\t\tcase CartActionTypes.ADD_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: addItemToCart(state.cartItems, action.payload)\n\t\t\t}\n\t\t//why place the filter item here? same with addItem, its just a util\n\t\t//fine, so what do the selectors do again? \n\t\tcase CartActionTypes.CLEAR_ITEM_FROM_CART:\n\t\t\treturn {\n\t\t        ...state,\n\t\t        cartItems: state.cartItems.filter(\n\t\t          cartItem => cartItem.id !== action.payload.id\n\t\t        )\n\t\t      }\n\t\t      case CartActionTypes.REMOVE_ITEM:\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcartItems: removeItemFromCart(state.cartItems, action.payload)\n\t\t\t}\n\t\tdefault: \n\t\t\treturn state\n\t} \n}\n\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}