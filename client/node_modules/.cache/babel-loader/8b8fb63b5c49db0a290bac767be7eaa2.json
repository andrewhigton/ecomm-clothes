{"ast":null,"code":"import _slicedToArray from \"/Users/andrewhigton/Documents/react/ecomm-clothes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-in/sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-in.styles.scss'; // class SignIn extends React.Component {\n\nconst SignIn = () => {\n  const _useState = useState({\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const email = user.email,\n          password = user.password; // have to send email and password here to the server\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password); //then reset the state to zero\n\n      setUser({\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //so you set state first, then you send state to firebase\n\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          value = _event$target.value,\n          name = _event$target.name;\n    this.setState({\n      [name]: value\n    });\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    handleChange: handleChange,\n    value: email,\n    label: \"email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: password,\n    handleChange: handleChange,\n    label: \"password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" Sign in with Google \"))));\n};\n\nexport default SignIn; // const [user, setuser] = useState({email, password})\n// constructor(props) {\n//   super(props);\n//   this.state = {\n//     email: '',\n//     password: ''\n//   };\n// }\n// //firebase version\n// //then you send state to firebase, with email and password\n// //you would haver to rewrite all of this, to get it working    \n//   handleSubmit = async event => {\n//   event.preventDefault();\n//   const { email, password } = this.state;\n//   // have to send email and password here to the server\n//   try {\n//     await auth.signInWithEmailAndPassword(email, password);\n//     //then reset the state to zero\n//     this.setState({ email: '', password: '' });\n//   } catch(error) {\n//     console.log(error);\n//   }\n// };\n// //so you set state first, then you send state to firebase\n// handleChange = event => {\n//   const { value, name } = event.target;\n//   this.setState({ [name]: value });\n// };\n// // this is postgres db\n// //how does it work\n// // handleSubmit = () => {\n// //   fetch('http://localhost:3000/signin', {\n// //     method: 'post',\n// //     headers: {'Content-Type': 'application/json'},\n// //     body: JSON.stringify({\n// //       email: this.state.email,\n// //       password: this.state.password\n// //       })  \n// //     })\n// //     .then(response => response.json())\n// //     .then(user => {\n// //       // this.props.loadUser\n// //       // then change the route to homepage\n// //       //how to set the info in app.js, then get it back to update the sign in??\n// //       //how does firebase do it? \n// //       console.log(user)\n// //         }) \n// //       //})\n// //     }\n// render() {\n//   return (\n//     <div className='sign-in'>\n//       <h2>I already have an account</h2>\n//       <span>Sign in with your email and password</span>\n//       <form onSubmit={this.handleSubmit}>\n//         <FormInput\n//           name='email'\n//           type='email'\n//           handleChange={this.handleChange}\n//           value={this.state.email}\n//           label='email'\n//           required\n//         />\n//         <FormInput\n//           name='password'\n//           type='password'\n//           value={this.state.password}\n//           handleChange={this.handleChange}\n//           label='password'\n//           required\n//         />\n//         <div className='buttons'>\n//         <CustomButton type='submit'> Sign in </CustomButton>\n//         <CustomButton onClick={signInWithGoogle} isGoogleSignIn> Sign in with Google </CustomButton>\n//         </div>\n//       </form>\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignIn","email","password","user","setUser","handleSubmit","event","preventDefault","signInWithEmailAndPassword","error","console","log","handleChange","target","value","name","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,oCAAtB;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAsC,+BAAtC;AAEA,OAAO,uBAAP,C,CAEA;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBAEKL,QAAQ,CAAC;AAACM,IAAAA,KAAK,EAAE,EAAR;AAAYC,IAAAA,QAAQ,EAAE;AAAtB,GAAD,CAFb;AAAA;AAAA,QAEZC,IAFY;AAAA,QAENC,OAFM;;AAIjB,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AACpCA,IAAAA,KAAK,CAACC,cAAN;AADoC,UAE5BN,KAF4B,GAERE,IAFQ,CAE5BF,KAF4B;AAAA,UAErBC,QAFqB,GAERC,IAFQ,CAErBD,QAFqB,EAGpC;;AACA,QAAI;AACF,YAAMJ,IAAI,CAACU,0BAAL,CAAgCP,KAAhC,EAAuCC,QAAvC,CAAN,CADE,CAEF;;AACAE,MAAAA,OAAO,CAAC;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAD,CAAP;AACD,KAJD,CAIE,OAAMO,KAAN,EAAa;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXC,CAJiB,CAiBnB;;;AACA,QAAMG,YAAY,GAAGN,KAAK,IAAI;AAAA,0BACJA,KAAK,CAACO,MADF;AAAA,UACpBC,KADoB,iBACpBA,KADoB;AAAA,UACbC,IADa,iBACbA,IADa;AAE5B,SAAKC,QAAL,CAAc;AAAE,OAACD,IAAD,GAAQD;AAAV,KAAd;AACD,GAHD;;AAME,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAIE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,YAAY,EAAEO,YAHhB;AAIE,IAAA,KAAK,EAAEX,KAJT;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEC,QAHT;AAIE,IAAA,YAAY,EAAEU,YAJhB;AAKE,IAAA,KAAK,EAAC,UALR;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAiBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADA,EAEA,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEb,gBAAvB;AAAyC,IAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAFA,CAjBF,CAJF,CADF;AA6BH,CArDD;;AAuDA,eAAeC,MAAf,C,CAGA;AACE;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { useState }  from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle} from '../../firebase/firebase.utils'\n\nimport './sign-in.styles.scss';\n\n// class SignIn extends React.Component {\n  \nconst SignIn = () => {\n\n  const [user, setUser] = useState({email: '', password: ''})\n    \n    const handleSubmit = async event => {\n    event.preventDefault();\n    const { email, password } = user;\n    // have to send email and password here to the server\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      //then reset the state to zero\n      setUser({ email: '', password: '' });\n    } catch(error) {\n      console.log(error);\n    }\n  };\n  \n  //so you set state first, then you send state to firebase\n  const handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n\n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        \n        <form onSubmit={handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={handleChange}\n            value={email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={password}\n            handleChange={handleChange}\n            label='password'\n            required\n          />\n          <div className='buttons'>\n          <CustomButton type='submit'> Sign in </CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn> Sign in with Google </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n}\n\nexport default SignIn;\n\n\n// const [user, setuser] = useState({email, password})\n  // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     email: '',\n  //     password: ''\n  //   };\n  // }\n\n  // //firebase version\n  // //then you send state to firebase, with email and password\n  // //you would haver to rewrite all of this, to get it working    \n  //   handleSubmit = async event => {\n  //   event.preventDefault();\n  //   const { email, password } = this.state;\n  //   // have to send email and password here to the server\n  //   try {\n  //     await auth.signInWithEmailAndPassword(email, password);\n  //     //then reset the state to zero\n  //     this.setState({ email: '', password: '' });\n  //   } catch(error) {\n  //     console.log(error);\n  //   }\n  // };\n  \n  // //so you set state first, then you send state to firebase\n  // handleChange = event => {\n  //   const { value, name } = event.target;\n  //   this.setState({ [name]: value });\n  // };\n\n  // // this is postgres db\n  // //how does it work\n  // // handleSubmit = () => {\n  // //   fetch('http://localhost:3000/signin', {\n  // //     method: 'post',\n  // //     headers: {'Content-Type': 'application/json'},\n  // //     body: JSON.stringify({\n  // //       email: this.state.email,\n  // //       password: this.state.password\n  // //       })  \n  // //     })\n  // //     .then(response => response.json())\n  // //     .then(user => {\n  // //       // this.props.loadUser\n  // //       // then change the route to homepage\n  // //       //how to set the info in app.js, then get it back to update the sign in??\n  // //       //how does firebase do it? \n  // //       console.log(user)\n        \n  // //         }) \n  // //       //})\n  // //     }\n  \n\n  // render() {\n  //   return (\n  //     <div className='sign-in'>\n  //       <h2>I already have an account</h2>\n  //       <span>Sign in with your email and password</span>\n        \n  //       <form onSubmit={this.handleSubmit}>\n  //         <FormInput\n  //           name='email'\n  //           type='email'\n  //           handleChange={this.handleChange}\n  //           value={this.state.email}\n  //           label='email'\n  //           required\n  //         />\n  //         <FormInput\n  //           name='password'\n  //           type='password'\n  //           value={this.state.password}\n  //           handleChange={this.handleChange}\n  //           label='password'\n  //           required\n  //         />\n  //         <div className='buttons'>\n  //         <CustomButton type='submit'> Sign in </CustomButton>\n  //         <CustomButton onClick={signInWithGoogle} isGoogleSignIn> Sign in with Google </CustomButton>\n  //         </div>\n  //       </form>\n  //     </div>\n  //   );\n  // }"]},"metadata":{},"sourceType":"module"}