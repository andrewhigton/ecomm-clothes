{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-in/sign-in.component.jsx\";\nimport React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle } from '../../firebase/firebase.utils';\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  //removed this for redux. not needed\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const _event$target = event.target,\n            value = _event$target.value,\n            name = _event$target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = () => {\n      fetch('http://localhost:3000/signin', {\n        method: 'post',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email: this.state.email,\n          password: this.state.password\n        })\n      }).then(response => response.json()).then(user => {\n        //how to set the info in app.js, then get it back to update the sign in??\n        //how does firebase do it? \n        console.log(user);\n      }); //})\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  } //firebase version\n  //then you send state to firebase, with email and password\n  //you would haver to rewrite all of this, to get it working    \n  //   handleSubmit = async event => {\n  //   event.preventDefault();\n  //   const { email, password } = this.state;\n  //   // have to send email and password here to the server\n  //   try {\n  //     await auth.signInWithEmailAndPassword(email, password);\n  //     //then reset the state to zero\n  //     this.setState({ email: '', password: '' });\n  //   } catch(error) {\n  //     console.log(error);\n  //   }\n  // };\n  //so you set state first, then you send state to firebase\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"I already have an account\"), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      handleChange: this.handleChange,\n      value: this.state.email,\n      label: \"email\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      label: \"password\",\n      required: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(CustomButton, {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \" Sign in \"), React.createElement(CustomButton, {\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \" Sign in with Google \"))));\n  }\n\n}\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-in/sign-in.component.jsx"],"names":["React","FormInput","CustomButton","auth","signInWithGoogle","SignIn","Component","constructor","props","handleChange","event","target","value","name","setState","handleSubmit","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","user","console","log","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, signInWithGoogle} from '../../firebase/firebase.utils'\n\nimport './sign-in.styles.scss';\n\nclass SignIn extends React.Component {\n  //removed this for redux. not needed\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  //firebase version\n  //then you send state to firebase, with email and password\n  //you would haver to rewrite all of this, to get it working    \n  //   handleSubmit = async event => {\n  //   event.preventDefault();\n  //   const { email, password } = this.state;\n  //   // have to send email and password here to the server\n  //   try {\n  //     await auth.signInWithEmailAndPassword(email, password);\n  //     //then reset the state to zero\n  //     this.setState({ email: '', password: '' });\n  //   } catch(error) {\n  //     console.log(error);\n  //   }\n  // };\n  \n  //so you set state first, then you send state to firebase\n  handleChange = event => {\n    const { value, name } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  // this is postgres db\n  handleSubmit = () => {\n    fetch('http://localhost:3000/signin', {\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password\n        })  \n      })\n      .then(response => response.json())\n      .then(user => {\n        //how to set the info in app.js, then get it back to update the sign in??\n        //how does firebase do it? \n        console.log(user)\n        \n          }) \n        //})\n      }\n  \n\n  render() {\n    return (\n      <div className='sign-in'>\n        <h2>I already have an account</h2>\n        <span>Sign in with your email and password</span>\n        \n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            handleChange={this.handleChange}\n            value={this.state.email}\n            label='email'\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            label='password'\n            required\n          />\n          <div className='buttons'>\n          <CustomButton type='submit'> Sign in </CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn> Sign in with Google </CustomButton>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default SignIn;"]},"metadata":{},"sourceType":"module"}