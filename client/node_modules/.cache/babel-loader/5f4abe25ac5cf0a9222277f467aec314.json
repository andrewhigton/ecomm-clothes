{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/react/tictactoe/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return React.createElement(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, props.value);\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n\n  renderSquare(i) {\n    render(React.createElement(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    const status = 'Next player: ' + (xIsNext ? 'X' : 'O');\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)), React.createElement(\"div\", {\n      className: \"board-row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)));\n  }\n\n}\n\nclass Game extends React.Component {\n  render() {\n    return React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"game-board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Board, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"game-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"ol\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })));\n  }\n\n}\n\nReactDOM.render(React.createElement(Game, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}), document.getElementById('root')); // import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// //import * as serviceWorker from './serviceWorker';\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null)\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n//   handleClick(i) {\n//     // const history = this.state.history;\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares\n//       }]),\n//        stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext,\n//     });\n//   }\n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n//   render() {\n//     const history = this.state.history;\n//     // const current = history[history.length - 1];\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board\n//             squares={current.squares}\n//             onClick={(i) => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// // ========================================\n// ReactDOM.render(\n//   <Game />,\n//   document.getElementById('root')\n// );\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/tictactoe/src/index.js"],"names":["React","ReactDOM","Square","props","onClick","value","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","setState","renderSquare","render","status","Game","document","getElementById"],"mappings":"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":["\timport React from 'react';\n\timport ReactDOM from 'react-dom';\n\timport './index.css';\n\n\tfunction Square(props) {\n\t\treturn (\n\t\t\t<button \n\t\t\tclassName='square' \n\t\t\tonClick={props.onClick}>\n\t\t\t{props.value}\n\t\t\t</button>\n\t\t\t)\n\t\t}\n\n\tclass Board extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props) \n\t\t\tthis.state = {\n\t\t\t\tsquares: Array(9).fill(null),\n\t\t\t\txIsNext: true,\n\t\t\t}\n\t\t}\n\n\t\thandleClick(i) {\n\t\t\tconst squares = this.state.squares.slice();\n\t\t\tsquares[i] = this.state.xIsNext ? 'X' : 'O';\n\t\t\tthis.setState({\n\t\t\t\tsquares: squares,\n\t\t\t\txIsNext: !this.state.xIsNext,\n\t\t\t})\n\t\t}\n\n\t\trenderSquare(i) {\n\t\t\trender (\n\t\t\t<Square \n\t\t\tvalue={this.state.squares[i]}\n\t\t\tonClick={() => this.handleClick(i)}\n\t\t\t/>\n\t\t\t)\n\t\t}\n\n\n\t\trender() {\n\t\t\tconst status = 'Next player: ' + (xIsNext ? 'X' : 'O') \n\t\t\treturn (\n\t\t\t\t<div>\n\t\t\t\t\t<div className='status'>{status}</div>\n\t\t\t\t\t\t<div className='board-row'>\n\t\t\t\t\t\t\t{this.renderSquare(0)}\n\t\t\t\t\t\t\t{this.renderSquare(1)}\n\t\t\t\t\t\t\t{this.renderSquare(2)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='board-row'>\n\t\t\t\t\t\t\t{this.renderSquare(3)}\n\t\t\t\t\t\t\t{this.renderSquare(4)}\n\t\t\t\t\t\t\t{this.renderSquare(5)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='board-row'>\n\t\t\t\t\t\t\t{this.renderSquare(6)}\n\t\t\t\t\t\t\t{this.renderSquare(7)}\n\t\t\t\t\t\t\t{this.renderSquare(8)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tclass Game extends React.Component {\n\t\t\trender() {\n\t\t\t\treturn (\n\t\t\t\t<div className='board'>\n\t\t\t\t\t<div className='game-board'>\n\t\t\t\t\t\t<Board />\t\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='game-info'>\n\t\t\t\t\t\t<div>{}</div>\t\t\t\t\t\t\n\t\t\t\t\t\t<ol>{}</ol>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t}\n\n\tReactDOM.render(\n\t\t<Game />,\n\t\tdocument.getElementById('root')\n\t\t);\n\n\n\n\n// import React from 'react';\n// import ReactDOM from 'react-dom';\n// import './index.css';\n// import App from './App';\n// //import * as serviceWorker from './serviceWorker';\n\n// function Square(props) {\n//   return (\n//     <button className=\"square\" onClick={props.onClick}>\n//       {props.value}\n//     </button>\n//   );\n// }\n\n// class Board extends React.Component {\n//   renderSquare(i) {\n//     return (\n//       <Square\n//         value={this.props.squares[i]}\n//         onClick={() => this.props.onClick(i)}\n//       />\n//     );\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(0)}\n//           {this.renderSquare(1)}\n//           {this.renderSquare(2)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(3)}\n//           {this.renderSquare(4)}\n//           {this.renderSquare(5)}\n//         </div>\n//         <div className=\"board-row\">\n//           {this.renderSquare(6)}\n//           {this.renderSquare(7)}\n//           {this.renderSquare(8)}\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// class Game extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       history: [{\n//         squares: Array(9).fill(null)\n//       }],\n//       stepNumber: 0,\n//       xIsNext: true\n//     };\n//   }\n\n//   handleClick(i) {\n//     // const history = this.state.history;\n//     const history = this.state.history.slice(0, this.state.stepNumber + 1);\n//     const current = history[history.length - 1];\n//     const squares = current.squares.slice();\n//     if (calculateWinner(squares) || squares[i]) {\n//       return;\n//     }\n//     squares[i] = this.state.xIsNext ? 'X' : 'O';\n//     this.setState({\n//       history: history.concat([{\n//         squares: squares\n//       }]),\n//        stepNumber: history.length,\n//       xIsNext: !this.state.xIsNext,\n//     });\n//   }\n  \n//   jumpTo(step) {\n//     this.setState({\n//       stepNumber: step,\n//       xIsNext: (step % 2) === 0,\n//     });\n//   }\n\n\n//   render() {\n//     const history = this.state.history;\n//     // const current = history[history.length - 1];\n//     const current = history[this.state.stepNumber];\n//     const winner = calculateWinner(current.squares);\n\n//     const moves = history.map((step, move) => {\n//       const desc = move ?\n//         'Go to move #' + move :\n//         'Go to game start';\n//       return (\n//         <li key={move}>\n//           <button onClick={() => this.jumpTo(move)}>{desc}</button>\n//         </li>\n//       );\n//     });\n\n//     let status;\n//     if (winner) {\n//       status = 'Winner: ' + winner;\n//     } else {\n//       status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n//     }\n\n//     return (\n//       <div className=\"game\">\n//         <div className=\"game-board\">\n//           <Board\n//             squares={current.squares}\n//             onClick={(i) => this.handleClick(i)}\n//           />\n//         </div>\n//         <div className=\"game-info\">\n//           <div>{status}</div>\n//           <ol>{moves}</ol>\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// // ========================================\n\n// ReactDOM.render(\n//   <Game />,\n//   document.getElementById('root')\n// );\n\n// function calculateWinner(squares) {\n//   const lines = [\n//     [0, 1, 2],\n//     [3, 4, 5],\n//     [6, 7, 8],\n//     [0, 3, 6],\n//     [1, 4, 7],\n//     [2, 5, 8],\n//     [0, 4, 8],\n//     [2, 4, 6],\n//   ];\n//   for (let i = 0; i < lines.length; i++) {\n//     const [a, b, c] = lines[i];\n//     if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n//       return squares[a];\n//     }\n//   }\n//   return null;\n// }"]},"metadata":{},"sourceType":"module"}