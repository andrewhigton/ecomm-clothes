{"ast":null,"code":"import _defineProperty from \"/Users/andrewhigton/Documents/react/ecomm-clothes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/react/ecomm-clothes/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const setCurrentUser = this.props.setCurrentUser;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth); //here, if true, you also set state in the app \n\n        userRef.onSnapshot(snapShot => {\n          setCurrentUser(_objectSpread({\n            id: snapShot.id\n          }, snapShot.data()));\n        });\n      } //tihs resets it to null when logged out, because userAuth is null\n      //this.setState({ currentUser: userAuth });\n\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }) // {...props} currentUser={this.state.currentUser}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }))));\n  }\n\n} //earlier\n// const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser\n// })\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //here you use dispatch to pass the action object, setCurrenUser, with the new user, to the reducers\n//the reducers work out which one is needed, then pass that along to the store\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // <Route exact path='/signin' render={() => this.props.currentUser ? \n//                 (<Redirect to ='/' />\n//                 ) : (\n// const App = ({ setCurrentUser, currentUser }) => {\n//       useEffect(() => {\n//         setCurrentUser();\n//       }, [setCurrentUser]); \n//     return (\n//       <div>\n//         <BrowserRouter>\n//         <Header />\n//           <Switch>\n//           <Route exact path='/' component={HomePage} />\n//           <Route path='/shop' component={ShopPage} />\n//           <Route exact path='/checkout' component={CheckoutPage} />\n//           <Route exact path='/signin' \n//           render={() => currentUser ? (<Redirect to='/' />) : \n//             (<SignInAndSignUpPage />)\n//           }/>\n//         </Switch>\n//         </BrowserRouter>\n//       </div>\n//     )\n// }\n// const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser\n// })\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// })\n// export default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/App.js"],"names":["React","useEffect","BrowserRouter","Switch","Route","Redirect","connect","SignInAndSignUpPage","HomePage","ShopPage","Header","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","App","Component","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","userRef","onSnapshot","snapShot","id","data","componentWillUnmount","render","currentUser","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'; \nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport './App.css';\n\nclass App extends Component {\n    //removed this for redux\n  //   constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     currentUser: null\n  //   }\n  // }\n\n// this fetches the users on luanch\n// componentDidMount() {\n//   fetch('http://localhost:3000/')\n//   .then(response => response.json())\n//   .then(data => {\n//       //console.log(data)\n//       setCurrentUser({\n//               id: data.id,\n//               data\n//     })\n//   })\n// }\n\n  // this awaits conf from firebase, then sets the currentUser \n  //how would you do this? how to get the info from the signin?\n  //its a separate process. on componentdidmount, it checks in with the db, if true, we have a sign in\n  //so in firebase, it logs as a user as true. how would ps do this? \n  //then you check on app.js separately, I believe, whether the user is logged in. \n  //if so, you update setCurrentuser from there. \n  //but, i would wiat until you come across this in postgress studies. or Mongo. \n  //otherwise, you will waste valuable time    \n\n  unsubscribeFromAuth = null;\n\n  componentDidMount() {\n      const { setCurrentUser } = this.props;\n\n      this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        //here, if true, you also set state in the app \n        userRef.onSnapshot(snapShot => {\n          setCurrentUser({\n              id: snapShot.id,\n              ...snapShot.data()\n            })\n        });\n      }\n      //tihs resets it to null when logged out, because userAuth is null\n      //this.setState({ currentUser: userAuth });\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n    render () {\n    return (\n    \t<div>\n    \t\t<BrowserRouter>\n        <Header />\n          <Switch>\n    \t\t\t<Route exact path='/' component={HomePage} />\n    \t\t\t<Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : \n            (<SignInAndSignUpPage />)\n            // {...props} currentUser={this.state.currentUser}\n          }/>\n    \t\t</Switch>\n    \t\t</BrowserRouter>\n    \t</div>\n\t\t)\n\t}\n}\n\n//earlier\n// const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser\n// })\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\n\n//here you use dispatch to pass the action object, setCurrenUser, with the new user, to the reducers\n//the reducers work out which one is needed, then pass that along to the store\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// <Route exact path='/signin' render={() => this.props.currentUser ? \n//                 (<Redirect to ='/' />\n//                 ) : (\n\n// const App = ({ setCurrentUser, currentUser }) => {\n//       useEffect(() => {\n//         setCurrentUser();\n//       }, [setCurrentUser]); \n\n//     return (\n//       <div>\n//         <BrowserRouter>\n//         <Header />\n//           <Switch>\n//           <Route exact path='/' component={HomePage} />\n//           <Route path='/shop' component={ShopPage} />\n//           <Route exact path='/checkout' component={CheckoutPage} />\n//           <Route exact path='/signin' \n//           render={() => currentUser ? (<Redirect to='/' />) : \n//             (<SignInAndSignUpPage />)\n//           }/>\n//         </Switch>\n//         </BrowserRouter>\n//       </div>\n//     )\n// }\n\n// const mapStateToProps = createStructuredSelector({\n//   currentUser: selectCurrentUser\n// })\n\n// const mapDispatchToProps = dispatch => ({\n//   setCurrentUser: user => dispatch(setCurrentUser(user))\n// })\n  \n// export default connect(mapStateToProps, mapDispatchToProps)(App);\n\n"]},"metadata":{},"sourceType":"module"}