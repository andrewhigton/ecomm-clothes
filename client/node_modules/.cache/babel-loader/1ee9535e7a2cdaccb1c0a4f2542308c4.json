{"ast":null,"code":"import _defineProperty from \"/Users/andrewhigton/Documents/react/ecomm-clothes/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/andrewhigton/Documents/react/ecomm-clothes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-up/sign-up.component.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport './sign-up.styles.scss';\n\nconst SignUp = () => {\n  const _useState = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        userCredentials = _useState2[0],\n        setUserCredentials = _useState2[1];\n\n  const displayName = userCredentials.displayName,\n        email = userCredentials.email,\n        password = userCredentials.password,\n        confirmPassword = userCredentials.confirmPassword;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"passwords don't match\");\n      return;\n    }\n\n    try {\n      const _ref = await auth.createUserWithEmailAndPassword(email, password),\n            user = _ref.user; //so then you call createUser etc below, in firebase file\n\n\n      await createUserProfileDocument(user, {\n        displayName\n      }); //this doesn't have a test and alert for seeing if user already exists\n      //yes it does, in the firebase fn above. thought not yet handled correctly\n\n      setUserCredentials({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleChange = event => {\n    const _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n    setUserCredentials(_objectSpread({}, userCredentials, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-up form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"I do not have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Sign up with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"text\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"confirmPassword\",\n    required: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"SIGN UP\")));\n};\n\nexport default SignUp; // class SignUp extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tdisplayName: '',\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tconfirmPassword: ''\t\t\t\n// \t\t}\n// \t}\n// \t//postgres db\n// \t// handleSubmit = async event => {\n// \t// \tconst { displayName, email, password, confirmPassword } = this.state;\n// \t// \tfetch('http://localhost:3000/signup', {\n// \t//       method: 'post',\n// \t//       headers: {'Content-Type': 'application/json'},\n// \t//       body: JSON.stringify({\n// \t//         email: email,\n// \t//         password: password,\n// \t//         name: displayName\n// \t//         })  \n// \t//       })\n// \t// \t  .then(response => response.json())\n//  //    }\n// \t\t//firebase version\n// \t\thandleSubmit = async event => {\n// \t\tevent.preventDefault();\n// \t\tconst { displayName, email, password, confirmPassword } = this.state;\n// \t\tif(password !== confirmPassword) {\n// \t\t\talert(\"passwords don't match\");\n// \t\t\treturn;\n// \t\t\t}\n// \t\ttry {\n// \t\t\tconst { user } = await auth.createUserWithEmailAndPassword(\n// \t\t\t\temail,\n// \t\t\t\tpassword\n// \t\t\t);\n// \t\t\t//so then you call createUser etc below, in firebase file\n// \t\tawait createUserProfileDocument(user, { displayName });\n// \t\t//this doesn't have a test and alert for seeing if user already exists\n// \t\t//yes it does, in the firebase fn above. thought not yet handled correctly\n// \t\tthis.setState({\n//         displayName: '',\n//         email: '',\n//         password: '',\n//         confirmPassword: ''\n//       });\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n// \thandleChange = event => {\n// \t\tconst { name, value } = event.target;\n// \t\tthis.setState({ [name]: value })\n// \t};\n// \trender() {\n// \t\tconst { displayName, email, password, confirmPassword } = this.state;\n// \t\treturn (\n// \t\t\t<div className='sign-up form'>\n// \t\t\t<h2 className='title'>I do not have an account</h2>\n// \t\t\t<span>Sign up with your email and password</span>\n// \t\t\t<form onSubmit={this.handleSubmit}>\n// \t\t\t\t<FormInput\n// \t\t\t\ttype='text'\n// \t\t\t\tname='displayName'\n// \t\t\t\tvalue={displayName}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Display Name'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput\n// \t\t\t\ttype='email'\n// \t\t\t\tname='email'\n// \t\t\t\tvalue={email}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Email'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput \n// \t\t\t\ttype='password'\n// \t\t\t\tname='password'\n// \t\t\t\tvalue={this.state.password}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Password'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput \n// \t\t\t\ttype='text'\n// \t\t\t\tname='confirmPassword'\n// \t\t\t\tvalue={confirmPassword}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='confirmPassword'\n// \t\t\t\trequired\n// \t\t\t\t/>\t\t\n// \t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton> \n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t\t)\n// \t\t};\n// \t}","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","FormInput","CustomButton","auth","createUserProfileDocument","SignUp","displayName","email","password","confirmPassword","userCredentials","setUserCredentials","handleSubmit","event","preventDefault","alert","createUserWithEmailAndPassword","user","error","console","handleChange","target","name","value"],"mappings":"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":["import React, {useState} from 'react';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { auth, createUserProfileDocument } from '../../firebase/firebase.utils'; \nimport './sign-up.styles.scss';\n\nconst SignUp = () => {\n\t\tconst [ userCredentials, setUserCredentials] = useState({\n\t\t\tdisplayName: '',\n\t\t\temail: '',\n\t\t\tpassword: '',\n\t\t\tconfirmPassword: ''\t\t\t\n\t\t\t})\n\n\t\tconst { displayName, email, password, confirmPassword } = userCredentials;\n\n\t\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\n\t\tif(password !== confirmPassword) {\n\t\t\talert(\"passwords don't match\");\n\t\t\treturn;\n\t\t\t}\n\t\t\n\t\ttry {\n\t\t\tconst { user } = await auth.createUserWithEmailAndPassword(\n\t\t\t\temail,\n\t\t\t\tpassword\n\t\t\t);\n\t\t\t//so then you call createUser etc below, in firebase file\n\t\tawait createUserProfileDocument(user, { displayName });\n\t\t//this doesn't have a test and alert for seeing if user already exists\n\t\t//yes it does, in the firebase fn above. thought not yet handled correctly\n\t\tsetUserCredentials({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n      });\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n\tconst handleChange = event => {\n\t\tconst { name, value } = event.target;\n\t\tsetUserCredentials({...userCredentials, [name]: value })\n\t};\n\n\n\t\treturn (\n\t\t\t<div className='sign-up form'>\n\t\t\t<h2 className='title'>I do not have an account</h2>\n\t\t\t<span>Sign up with your email and password</span>\n\t\t\t<form onSubmit={handleSubmit}>\n\t\t\t\t<FormInput\n\t\t\t\ttype='text'\n\t\t\t\tname='displayName'\n\t\t\t\tvalue={displayName}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tlabel='Display Name'\n\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput\n\t\t\t\ttype='email'\n\t\t\t\tname='email'\n\t\t\t\tvalue={email}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tlabel='Email'\n\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput \n\t\t\t\ttype='password'\n\t\t\t\tname='password'\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tlabel='Password'\n\t\t\t\trequired\n\t\t\t\t/>\n\t\t\t\t<FormInput \n\t\t\t\ttype='text'\n\t\t\t\tname='confirmPassword'\n\t\t\t\tvalue={confirmPassword}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tlabel='confirmPassword'\n\t\t\t\trequired\n\t\t\t\t/>\t\t\n\t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton> \n\t\t\t\t</form>\n\t\t\t</div>\n\t\t\t)\n\t\t};\n\n\nexport default SignUp;\n\n\n\n// class SignUp extends React.Component {\n// \tconstructor(props) {\n// \t\tsuper(props);\n// \t\tthis.state = {\n// \t\t\tdisplayName: '',\n// \t\t\temail: '',\n// \t\t\tpassword: '',\n// \t\t\tconfirmPassword: ''\t\t\t\n// \t\t}\n// \t}\n\n// \t//postgres db\n// \t// handleSubmit = async event => {\n// \t// \tconst { displayName, email, password, confirmPassword } = this.state;\n// \t// \tfetch('http://localhost:3000/signup', {\n// \t//       method: 'post',\n// \t//       headers: {'Content-Type': 'application/json'},\n// \t//       body: JSON.stringify({\n// \t//         email: email,\n// \t//         password: password,\n// \t//         name: displayName\n// \t//         })  \n// \t//       })\n// \t// \t  .then(response => response.json())\n\t\n//  //    }\n\n\n// \t\t//firebase version\n// \t\thandleSubmit = async event => {\n// \t\tevent.preventDefault();\n\n// \t\tconst { displayName, email, password, confirmPassword } = this.state;\n\t\t\n// \t\tif(password !== confirmPassword) {\n// \t\t\talert(\"passwords don't match\");\n// \t\t\treturn;\n// \t\t\t}\n\t\t\n// \t\ttry {\n// \t\t\tconst { user } = await auth.createUserWithEmailAndPassword(\n// \t\t\t\temail,\n// \t\t\t\tpassword\n// \t\t\t);\n// \t\t\t//so then you call createUser etc below, in firebase file\n// \t\tawait createUserProfileDocument(user, { displayName });\n// \t\t//this doesn't have a test and alert for seeing if user already exists\n// \t\t//yes it does, in the firebase fn above. thought not yet handled correctly\n// \t\tthis.setState({\n//         displayName: '',\n//         email: '',\n//         password: '',\n//         confirmPassword: ''\n//       });\n//     } catch (error) {\n//       console.error(error);\n//     }\n//   };\n\n// \thandleChange = event => {\n// \t\tconst { name, value } = event.target;\n// \t\tthis.setState({ [name]: value })\n// \t};\n\n// \trender() {\n// \t\tconst { displayName, email, password, confirmPassword } = this.state;\n// \t\treturn (\n// \t\t\t<div className='sign-up form'>\n// \t\t\t<h2 className='title'>I do not have an account</h2>\n// \t\t\t<span>Sign up with your email and password</span>\n// \t\t\t<form onSubmit={this.handleSubmit}>\n// \t\t\t\t<FormInput\n// \t\t\t\ttype='text'\n// \t\t\t\tname='displayName'\n// \t\t\t\tvalue={displayName}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Display Name'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput\n// \t\t\t\ttype='email'\n// \t\t\t\tname='email'\n// \t\t\t\tvalue={email}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Email'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput \n// \t\t\t\ttype='password'\n// \t\t\t\tname='password'\n// \t\t\t\tvalue={this.state.password}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='Password'\n// \t\t\t\trequired\n// \t\t\t\t/>\n// \t\t\t\t<FormInput \n// \t\t\t\ttype='text'\n// \t\t\t\tname='confirmPassword'\n// \t\t\t\tvalue={confirmPassword}\n// \t\t\t\tonChange={this.handleChange}\n// \t\t\t\tlabel='confirmPassword'\n// \t\t\t\trequired\n// \t\t\t\t/>\t\t\n// \t\t\t\t<CustomButton type='submit'>SIGN UP</CustomButton> \n// \t\t\t\t</form>\n// \t\t\t</div>\n// \t\t\t)\n// \t\t};\n// \t}"]},"metadata":{},"sourceType":"module"}