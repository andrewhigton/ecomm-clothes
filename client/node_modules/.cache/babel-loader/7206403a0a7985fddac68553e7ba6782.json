{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyCSVZ9Ib9cjdNZTwCUnfrIPFqIm22kdltA\",\n  authDomain: \"ecomm-clothes-db.firebaseapp.com\",\n  databaseURL: \"https://ecomm-clothes-db.firebaseio.com\",\n  projectId: \"ecomm-clothes-db\",\n  storageBucket: \"ecomm-clothes-db.appspot.com\",\n  messagingSenderId: \"305270687447\",\n  appId: \"1:305270687447:web:7fe14c4e52a30da5bd5292\",\n  measurementId: \"G-1EWXGR02TE\"\n};\nfirebase.initializeApp(config);\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(\"users/\".concat(userAuth.uid));\n  const snapShot = await userRef.get();\n  console.log(snapShot); // const userRef = firestore.doc(`users/${userAuth.uid}`);\n  // const snapShot = await userRef.get();\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   } catch (error) {\n  //     console.log('error creating user', error.message);\n  //   }\n  // }\n  // return userRef;\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","snapShot","get","console","log","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,kCAFD;AAGXC,EAAAA,WAAW,EAAE,yCAHF;AAIXC,EAAAA,SAAS,EAAE,kBAJA;AAKXC,EAAAA,aAAa,EAAE,8BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWAT,QAAQ,CAACU,aAAT,CAAuBT,MAAvB;AAEA,OAAO,MAAMU,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AAC3E,MAAI,CAACD,QAAL,EAAe;AAEf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,iBAAuBJ,QAAQ,CAACK,GAAhC,EAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ,EAN2E,CAQ3E;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACD,CA5BM;AA8BP,OAAO,MAAMI,IAAI,GAAGtB,QAAQ,CAACsB,IAAT,EAAb;AACP,OAAO,MAAMP,SAAS,GAAGf,QAAQ,CAACe,SAAT,EAAlB;AAEP,MAAMQ,QAAQ,GAAG,IAAIvB,QAAQ,CAACsB,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAevB,QAAf","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyCSVZ9Ib9cjdNZTwCUnfrIPFqIm22kdltA\",\n    authDomain: \"ecomm-clothes-db.firebaseapp.com\",\n    databaseURL: \"https://ecomm-clothes-db.firebaseio.com\",\n    projectId: \"ecomm-clothes-db\",\n    storageBucket: \"ecomm-clothes-db.appspot.com\",\n    messagingSenderId: \"305270687447\",\n    appId: \"1:305270687447:web:7fe14c4e52a30da5bd5292\",\n    measurementId: \"G-1EWXGR02TE\"\n  };\n\nfirebase.initializeApp(config);\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const snapShot = await userRef.get();\n\n  console.log(snapShot)\n\n  // const userRef = firestore.doc(`users/${userAuth.uid}`);\n\n  // const snapShot = await userRef.get();\n\n  // if (!snapShot.exists) {\n  //   const { displayName, email } = userAuth;\n  //   const createdAt = new Date();\n  //   try {\n  //     await userRef.set({\n  //       displayName,\n  //       email,\n  //       createdAt,\n  //       ...additionalData\n  //     });\n  //   } catch (error) {\n  //     console.log('error creating user', error.message);\n  //   }\n  // }\n\n  // return userRef;\n};\n\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\n\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(provider);\n\nexport default firebase;"]},"metadata":{},"sourceType":"module"}