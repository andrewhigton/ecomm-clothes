{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/react/ecomm-clothes/src/App.js\";\n// questions\n// when to use () and not {}? {} for rendering javascript, () for returning elements without js \nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component';\nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport './App.css';\n\nclass App extends Component {\n  //removed this for redux\n  //   constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     currentUser: null\n  //   }\n  // }\n  // this fetches the users on luanch\n  componentDidMount() {\n    fetch('http://localhost:3000/').then(response => response.json()).then(data => {\n      currentUser: {\n        id: data.id, data;\n      }\n    });\n  } //go over this again? diff between snapshot and the other one?\n  // unsubscribeFromAuth = null;\n  // componentDidMount() {\n  //     const { setCurrentUser } = this.props;\n  //     this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //     // this.setState({ currentUser: user });\n  //           // console.log(user);    \n  //     if (userAuth) {\n  //       const userRef = await createUserProfileDocument(userAuth);\n  //       //here, if true, you also set state in the app \n  //       userRef.onSnapshot(snapShot => {\n  //         setCurrentUser({\n  //             id: snapShot.id,\n  //             ...snapShot.data()\n  //           })\n  //         // this.setState({\n  //         //   currentUser: {\n  //         //     id: snapShot.id,\n  //         //     ...snapShot.data()\n  //         //   }\n  //         // }\n  //         // , () => {\n  //         //   console.log(this.state);\n  //         // });\n  //       });\n  //     }\n  //     //tihs resets it to null when logged out, because userAuth is null\n  //     //this.setState({ currentUser: userAuth });\n  //     setCurrentUser(userAuth);\n  //   });\n  // }\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      component: HomePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/shop\",\n      component: ShopPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/checkout\",\n      component: CheckoutPage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signin\",\n      render: () => this.props.currentUser ? React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }) : React.createElement(SignInAndSignUpPage, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }) // {...props} currentUser={this.state.currentUser}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))));\n  }\n\n} //earlier\n// const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser\n// })\n\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n}); //here you use dispatch to pass the action object, setCurrenUser, with the new user, to the reducers\n//the reducers work out which one is needed, then pass that along to the store\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App); // <Route exact path='/signin' render={() => this.props.currentUser ? \n//                 (<Redirect to ='/' />\n//                 ) : (","map":{"version":3,"sources":["/Users/andrewhigton/Documents/react/ecomm-clothes/src/App.js"],"names":["React","Component","BrowserRouter","Switch","Route","Redirect","connect","SignInAndSignUpPage","HomePage","ShopPage","Header","auth","createUserProfileDocument","setCurrentUser","selectCurrentUser","createStructuredSelector","CheckoutPage","App","componentDidMount","fetch","then","response","json","data","currentUser","id","render","props","mapStateToProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["// questions\n// when to use () and not {}? {} for rendering javascript, () for returning elements without js \nimport React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport SignInAndSignUpPage from './pages/sign-in-and-sign-up/sign-in-and-sign-up.component'; \nimport HomePage from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop/shop.component';\nimport Header from './components/header/header.component';\nimport { auth, createUserProfileDocument } from './firebase/firebase.utils';\nimport { setCurrentUser } from './redux/user/user.actions';\nimport { selectCurrentUser } from './redux/user/user.selectors';\nimport { createStructuredSelector } from 'reselect';\nimport CheckoutPage from './pages/checkout/checkout.component';\nimport './App.css';\n\nclass App extends Component {\n    //removed this for redux\n  //   constructor(props) {\n  //   super(props);\n\n  //   this.state = {\n  //     currentUser: null\n  //   }\n  // }\n\n\n\n// this fetches the users on luanch\ncomponentDidMount() {\n  fetch('http://localhost:3000/')\n  .then(response => response.json())\n  .then(data => {\n      currentUser: {\n              id: data.id,\n              data\n    }\n  })\n}\n\n  //go over this again? diff between snapshot and the other one?\n  // unsubscribeFromAuth = null;\n\n  // componentDidMount() {\n  //     const { setCurrentUser } = this.props;\n\n  //     this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n  //     // this.setState({ currentUser: user });\n  //           // console.log(user);    \n  //     if (userAuth) {\n  //       const userRef = await createUserProfileDocument(userAuth);\n\n  //       //here, if true, you also set state in the app \n  //       userRef.onSnapshot(snapShot => {\n  //         setCurrentUser({\n  //             id: snapShot.id,\n  //             ...snapShot.data()\n  //           })\n  //         // this.setState({\n  //         //   currentUser: {\n  //         //     id: snapShot.id,\n  //         //     ...snapShot.data()\n  //         //   }\n  //         // }\n  //         // , () => {\n  //         //   console.log(this.state);\n  //         // });\n  //       });\n  //     }\n  //     //tihs resets it to null when logged out, because userAuth is null\n  //     //this.setState({ currentUser: userAuth });\n  //     setCurrentUser(userAuth);\n  //   });\n  // }\n\n  // componentWillUnmount() {\n  //   this.unsubscribeFromAuth();\n  // }\n\n    render () {\n    return (\n    \t<div>\n    \t\t<BrowserRouter>\n        <Header />\n          <Switch>\n    \t\t\t<Route exact path='/' component={HomePage} />\n    \t\t\t<Route path='/shop' component={ShopPage} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/signin' render={() => this.props.currentUser ? (<Redirect to='/' />) : \n            (<SignInAndSignUpPage />)\n            // {...props} currentUser={this.state.currentUser}\n          }/>\n    \t\t</Switch>\n    \t\t</BrowserRouter>\n    \t</div>\n\t\t)\n\t}\n}\n\n//earlier\n// const mapStateToProps = ({ user }) => ({\n//   currentUser: user.currentUser\n// })\n\nconst mapStateToProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n})\n\n\n//here you use dispatch to pass the action object, setCurrenUser, with the new user, to the reducers\n//the reducers work out which one is needed, then pass that along to the store\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n})\n  \nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n// <Route exact path='/signin' render={() => this.props.currentUser ? \n//                 (<Redirect to ='/' />\n//                 ) : ("]},"metadata":{},"sourceType":"module"}